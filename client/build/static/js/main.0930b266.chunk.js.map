{"version":3,"sources":["assets/like.svg","assets/camera.svg","actions/users.js","components/users/Users.styles.jsx","components/users/Users.js","components/header/Header.styles.jsx","components/header/Header.js","actions/tab.js","App.js","serviceWorker.js","reducers/users.js","reducers/tab.js","index.js"],"names":["module","exports","setUsers","users","type","payload","setMostPopular","setMostActive","UserCard","styled","div","Image","img","icon","UserCardContainer","MainContainer","connect","state","usersReducer","tabReducer","getUsers","dispatch","axios","get","then","usersData","data","catch","err","getMostPopular","getMostActive","match","useState","path","useEffect","console","log","renderUserCards","usersArray","map","user","key","_id","href","links","html","style","textDecoration","to","self","src","profile_image","medium","alt","username","renderUserCardsPopular","like","color","fontWeight","total_likes","renderUserCardsActive","camera","total_photos","activeTab","mostPopular","mostActive","renderUsers","Navbar","nav","LinkTitle","activeLink","Bar","setTab","tab","goToTab","history","push","array","useHistory","changeTab","i","length","onClick","title","App","className","exact","component","Users","Boolean","window","location","hostname","INITIAL_STATE","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","getState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.0930b266.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/like.2286bb63.svg\";","module.exports = __webpack_public_path__ + \"static/media/camera.165c74f4.svg\";","import axios from 'axios';\r\n\r\nexport const getUsers = () => {\r\n    return dispatch => {\r\n        axios.get('/api').then(usersData => {\r\n            dispatch(setUsers(([ ...usersData.data ])))\r\n        })\r\n        .catch(err => 'ERROR ' + err)\r\n    }\r\n}\r\n\r\nexport const setUsers = users => {\r\n    return {\r\n        type: 'SET_USERS',\r\n        payload: users\r\n    }\r\n}\r\n\r\nexport const getMostPopular = () => {\r\n    return dispatch => {\r\n        axios.get('/api/most-popular').then(usersData => {\r\n            dispatch(setMostPopular(([ ...usersData.data ])))\r\n        })\r\n        .catch(err => 'ERROR ' + err)\r\n    }\r\n}\r\n\r\nexport const setMostPopular = users => {\r\n    return {\r\n        type: 'SET_MOSTPOPULAR',\r\n        payload: users\r\n    }\r\n}\r\n\r\nexport const getMostActive = () => {\r\n    return dispatch => {\r\n        axios.get('/api/most-active').then(usersData => {\r\n            dispatch(setMostActive(([ ...usersData.data ])))\r\n        })\r\n        .catch(err => 'ERROR ' + err)\r\n    }\r\n}\r\n\r\nexport const setMostActive = users => {\r\n    return {\r\n        type: 'SET_MOSTACTIVE',\r\n        payload: users\r\n    }\r\n}","import styled from 'styled-components';\r\n\r\nexport const UserCard = styled.div`\r\n  width: 150px;\r\n  height: 150px;\r\n  display: flex;\r\n  padding: 20px 0;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  box-shadow: 5px 5px 10px #EFEFEF;\r\n  transition: all 0.3s ease;\r\n  margin: 10px;\r\n  color: grey;\r\n\r\n  &:hover {\r\n    transition: all 0.3s ease;\r\n    transform: scale(1.1);\r\n    box-shadow: 7px 7px 10px #ebebeb;\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  border-radius: ${({ icon }) => icon ? '0' : '100%'};\r\n  ${({ icon }) => icon ? 'width: 30px; background-image: #C7C7C7;' : '' }\r\n`;\r\n\r\nexport const UserCardContainer = styled.div`\r\n  width: 60%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  flex-wrap: wrap;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const MainContainer = styled.div`\r\n  width: 100vw;\r\n  padding-top: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUsers, getMostPopular, getMostActive } from '../../actions/users';\r\nimport axios from 'axios';\r\nimport { UserCard, UserCardContainer, MainContainer, Image } from './Users.styles';\r\nimport like from '../../assets/like.svg';\r\nimport camera from '../../assets/camera.svg';\r\n\r\nconst Users = ({ tabReducer, usersReducer, getUsers, getMostPopular, getMostActive, match }) => {\r\n\r\n    const [path, setPath] = useState(match.path);\r\n\r\n    useEffect(() => {\r\n        getUsers()\r\n        getMostPopular()\r\n        getMostActive()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(tabReducer)\r\n    }, [tabReducer])\r\n\r\n    const renderUsers = () => {\r\n        switch (tabReducer.activeTab) {\r\n            case '/':\r\n                const { users } = usersReducer;\r\n                return renderUserCards(users);\r\n                break;\r\n\r\n            case '/most-popular':\r\n                const { mostPopular } = usersReducer;\r\n                return renderUserCardsPopular(mostPopular);\r\n                break;\r\n\r\n            case '/most-active':\r\n                const { mostActive } = usersReducer;\r\n                return renderUserCardsActive(mostActive);\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const renderUserCards = usersArray => {\r\n        return usersArray.map(user =>\r\n            (\r\n                <a key={user._id} href={user.links.html} style={{ textDecoration: 'none' }}>\r\n                    <UserCard to={user.links.self}>\r\n                        <Image src={user.profile_image.medium} alt={user.username} />\r\n                        <p>{user.username}</p>\r\n                    </UserCard>\r\n                </a>\r\n            )\r\n        )\r\n    }\r\n\r\n    const renderUserCardsPopular = usersArray => {\r\n        return usersArray.map(user =>\r\n            (\r\n                <a key={user._id} href={user.links.html} style={{ textDecoration: 'none' }}>\r\n                    <UserCard to={user.links.self}>\r\n                        <Image src={like} alt='like' icon />\r\n                        <p style={{ color: '#91DBFC', fontWeight: '700' }}>{user.total_likes}</p>\r\n                        <p>{user.username}</p>\r\n                    </UserCard>\r\n                </a>\r\n            )\r\n        )\r\n    }\r\n\r\n    const renderUserCardsActive = usersArray => {\r\n        return usersArray.map(user =>\r\n            (\r\n                <a key={user._id} href={user.links.html} style={{ textDecoration: 'none' }}>\r\n                    <UserCard to={user.links.self}>\r\n                        <Image src={camera} alt='camera' icon />\r\n                        <p style={{ color: '#8D8D8D', fontWeight: '700' }}>{user.total_photos} photos</p>\r\n                        <p>{user.username}</p>\r\n                    </UserCard>\r\n                </a>\r\n            )\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <MainContainer>\r\n            <UserCardContainer>\r\n                {renderUsers()}\r\n            </UserCardContainer>\r\n        </MainContainer>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    usersReducer: state.usersReducer,\r\n    tabReducer: state.tabReducer\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUsers, getMostPopular, getMostActive })(Users);","import styled from 'styled-components';\r\n\r\nexport const Navbar = styled.nav`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const LinkTitle = styled.div`\r\n  width: 200px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  color: ${({ activeLink }) => activeLink ? '#373737' : '#c7c7c7'};\r\n  font-weight: ${({ activeLink }) => activeLink ? '700' : '400'};\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease;\r\n    color: #373737;\r\n  }\r\n`;\r\n\r\nexport const Bar = styled.div`\r\n  height: 30px;\r\n  width: 1px;\r\n  background-color: #dedede;\r\n`;","import React, { useEffect } from 'react';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { Navbar, Bar, LinkTitle } from './Header.styles';\r\nimport { connect } from 'react-redux';\r\nimport { goToTab, setTab } from '../../actions/tab';\r\n\r\nconst Header = ({ match, goToTab, setTab, tabReducer }) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const changeTab = path => {\r\n        setTab(path);\r\n        goToTab(path, history);\r\n    }\r\n\r\n    const renderTab = array => {\r\n        return array.tab.map((tab, i) => {\r\n            if(array.tab.length !== i+1) {\r\n                return (\r\n                    <>\r\n                        <LinkTitle \r\n                            key={i} \r\n                            onClick={() => changeTab(tab.path)} activeLink={tabReducer.activeTab === tab.path}\r\n                        >\r\n                            {tab.title}\r\n                        </LinkTitle>\r\n                        <Bar />\r\n                    </>\r\n                )\r\n            } else {\r\n                return (\r\n                    <LinkTitle \r\n                        key={i}\r\n                        onClick={() => changeTab(tab.path)}\r\n                        activeLink={tabReducer.activeTab === tab.path}\r\n                    >\r\n                        {tab.title}\r\n                    </LinkTitle>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Navbar>\r\n            {renderTab(tabReducer)}\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    tabReducer: state.tabReducer\r\n})\r\n\r\nexport default connect(mapStateToProps, { setTab, goToTab })(Header);","export const goToTab = (tab, history) => {\r\n    return dispatch => {\r\n        dispatch(() => history.push(`${tab}`))\r\n    };\r\n}\r\n\r\nexport const setTab = tab => {\r\n    return {\r\n        type: 'SET_TAB',\r\n        payload: tab\r\n    };\r\n}","import React from 'react';\nimport './App.css';\nimport Users from './components/users/Users';\nimport Header from './components/header/Header';\nimport { Switch, Route } from 'react-router';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={Users} />\n        <Route exact path=\"/most-popular\" component={Users} />\n        <Route exact path=\"/most-active\" component={Users} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const INITIAL_STATE = {\r\n    users: [],\r\n    mostPopular: [],\r\n    mostActive: []\r\n};\r\n\r\nexport const usersReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'SET_USERS':\r\n            return { ...state, users: action.payload };\r\n            break;\r\n\r\n        case 'SET_MOSTPOPULAR':\r\n            return { ...state, mostPopular: action.payload };\r\n            break;\r\n\r\n        case 'SET_MOSTACTIVE':\r\n            return { ...state, mostActive: action.payload };\r\n            break;\r\n    \r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n};","const INITIAL_STATE = {\r\n    tab: [\r\n        { path: '/', title: \"Tous les utilisateurs\" }, \r\n        { path: '/most-popular', title: \"Les plus populaires\" }, \r\n        { path: '/most-active', title: \"Les plus actifs\" }\r\n    ],\r\n    activeTab: '/'\r\n};\r\n\r\nexport const tabReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'SET_TAB':\r\n            return { ...state, activeTab: action.payload };\r\n            break;\r\n    \r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { usersReducer } from './reducers/users';\nimport { tabReducer } from './reducers/tab';\n\nconst rootReducer = combineReducers({\n    usersReducer,\n    tabReducer\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nconsole.log(store.getState())\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}